# 生产环境前端 Dockerfile
# 多阶段构建，包含前端构建和Nginx服务

# 第一阶段：前端构建
FROM node:18-alpine as frontend-builder

# 设置构建参数
ARG VITE_API_BASE_URL=/api
ARG BUILD_ENV=production

# 设置工作目录
WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache git python3 make g++

# 配置npm国内镜像源
RUN npm config set registry https://registry.npmmirror.com

# 复制package文件
COPY package*.json ./

# 安装依赖（使用npm ci for production）
RUN npm ci --only=production --no-audit --no-fund

# 复制源代码
COPY . .

# 设置环境变量
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV NODE_ENV=production

# 构建前端
RUN npm run build

# 第二阶段：Nginx服务
FROM nginx:1.25-alpine as production

# 设置标签
LABEL maintainer="wlweb-team"
LABEL version="1.0.0"
LABEL description="游戏脚本中间件管理系统 - 前端服务"

# 安装必要工具
RUN apk add --no-cache \
    curl \
    tzdata \
    && rm -rf /var/cache/apk/*

# 设置时区
RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone

# 创建nginx用户和组（如果不存在）
RUN addgroup -g 101 -S nginx || true
RUN adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# 复制构建好的前端文件
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# 复制nginx配置文件
COPY nginx/nginx.prod.conf /etc/nginx/nginx.conf

# 创建必要的目录
RUN mkdir -p /var/log/nginx /var/cache/nginx /etc/nginx/ssl \
    && chown -R nginx:nginx /var/log/nginx /var/cache/nginx /usr/share/nginx/html

# 设置正确的权限
RUN chmod -R 755 /usr/share/nginx/html

# 创建健康检查页面
RUN echo 'healthy' > /usr/share/nginx/html/health

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# 暴露端口
EXPOSE 80 443

# 使用非root用户运行（如果可能）
# USER nginx

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]